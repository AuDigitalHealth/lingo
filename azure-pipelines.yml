name: snomio-$(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)

trigger:
  branches:
    include:
      - main
  tags:
    include:
      - '*'

variables:
  mavenCache: $(Pipeline.Workspace)/.m2/repository
  mavenOptions: '-Dmaven.repo.local=$(mavenCache) -Dmaven.settings.security=never'

resources:
  repositories:
    - repository: sergio
      type: github
      name: aehrc/sergio
      endpoint: aehrc
      ref: rabbit-snomio-image-as-cli-entity-refactor

pool:
  vmImage: ubuntu-latest

jobs:
  - job: set_image_tag
    displayName: Set Image Tag
    steps:
      - script: |
          if [[ "$(Build.SourceBranch)" =~ refs/heads/(.+) ]]; then
            # Direct branch build
            postfix=""
          elif [[ "$(Build.SourceBranch)" =~ refs/pull/[0-9]+/merge ]]; then
            postfix="_${SYSTEM_PULLREQUEST_SOURCEBRANCH#refs/heads/}"
          elif [[ "$(Build.SourceBranch)" =~ refs/tags/(.+) ]]; then
            postfix="_${BASH_REMATCH[1]}"
          else
            postfix="_unknown"
          fi
          imageTag="$(Build.BuildNumber)$postfix"
          imageTag=${imageTag//\//-}
          imageTag=${imageTag//#/}
          echo "##vso[task.setvariable variable=imageTag]$imageTag"
          echo "$imageTag" > branchInfo.txt
          
          sed -i "s/^sentry\.release=.*/sentry.release=$(Build.BuildNumber)/"  api/src/main/resources/application.properties

        displayName: 'Set Image Tag and Save to File'

      - task: CopyFiles@2
        displayName: 'Copy branchInfo.txt to Artifacts Dir'
        inputs:
          contents: 'branchInfo.txt'
          targetFolder: '$(Build.ArtifactStagingDirectory)'

      - publish: $(Build.ArtifactStagingDirectory)
        displayName: Publish branchInfo.txt
        artifact: branchInfo

  - job: snomio_build_test_publish
    dependsOn: set_image_tag
    displayName: Build, run integration test and publish
    timeoutInMinutes: 60
    pool:
      name: 'highmemory-pool'
    steps:
      - download: current
        artifact: branchInfo

      - script: |
          imageTag=$(cat $(Pipeline.Workspace)/branchInfo/branchInfo.txt)
          if [[ -z "$imageTag" || "$imageTag" == *unknown* ]]; then
            echo "Invalid imageTag: $imageTag"
            exit 1
          fi
          echo "##vso[task.setvariable variable=buildInfo]$imageTag"
          if [ "$(Build.SourceBranch)" = "refs/heads/main" ]; then
            imageTag="$imageTag,latest"
          fi
          echo "##vso[task.setvariable variable=imageTag]$imageTag"
          echo "Using imageTag: $imageTag"

        displayName: 'Read imageTag from branchInfo.txt'

      - task: MavenAuthenticate@0
        inputs:
          artifactsFeeds: 'snomio'

      - task: Docker@2
        displayName: 'Login to ACR'
        inputs:
          command: login
          containerRegistry: $(containerRegistry)

      - task: Cache@2
        displayName: Cache Maven local repo
        inputs:
          key: 'maven | "$(Agent.OS)" | **/pom.xml'
          restoreKeys: |
            maven | "$(Agent.OS)"
            maven
          path: $(mavenCache)

      - task: Cache@2
        displayName: Cache node_modules
        inputs:
          key: 'npm | "$(Agent.OS)" | $(Build.SourcesDirectory)/ui/package.json'
          path: $(Build.SourcesDirectory)/ui/node_modules
          cacheHitVar: CACHE_RESTORED

      - script: |
          echo "*** Create Maven Local Repo at $(mavenCache)"
          mkdir -p "$(mavenCache)"
          echo "##vso[task.setvariable variable=M2_HOME]/opt/maven"
        displayName: 'Create Maven Local Repo and set up M2_HOME'

      - task: Maven@3
        displayName: 'Build and run integration test'
        inputs:
          mavenPomFile: 'pom.xml'
          options: '-Dsnomio.extensions.sergio.enabled=false -Dlingo.internal.users=$(imsUsername) -Ddocker.registry.host=$(dockerRegistry) -Ddocker.repository=$(dockerRepository) -Djib.to.tags=$(imageTag) -DargLine="-Dims-username=$(imsUsername) -Dims-password=$(imsPassword)"'
          mavenOptions: '$(mavenOptions) -Xmx5072m -Dims-username=$(imsUsername) -Dims-password=$(imsPassword) -Dbuildnumber=$(buildInfo)'
          javaHomeOption: 'path'
          jdkUserInputPath: '/usr/lib/jvm/java-17-openjdk-amd64'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'package'
      - task: PublishCodeCoverageResults@1
        displayName: Publish Code Coverage
        inputs:
          enabled: true
          codeCoverageTool: 'JaCoCo'
          summaryFileLocation: '**/target/site/jacoco/jacoco.xml'
          reportDirectory: '**/target/site/jacoco'
          additionalCodeCoverageFiles: '**/target/jacoco.exec'
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '$(mavenOptions)'
          javaHomeOption: 'path'
          jdkUserInputPath: '/usr/lib/jvm/java-17-openjdk-amd64'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'deploy -pl .,common,auth'